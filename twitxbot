#!/usr/bin/env python
import os
import sys
import re
import tweepy
import json
import urllib
import random
import time
user_name = 'USER'      #user who will get reply
bot_name  = 'prdpXbot'  #our bot_name
mflag = False   #mention flag
print time.asctime(time.localtime())  #for cronjob logs
urlfile = open("url.cache","a+")
urlfile_content = urlfile.read()

def xkcd():
    global urlfile, urlfile_content
    count = 10
    while True and count != 0:
        img_url = json.loads(urllib.urlopen("http://xkcd.com/%d/info.0.json"%(random.randint(1,1764))).read())["img"];
        if img_url not in urlfile_content:
            urlfile.write(img_url+"\n")
            break
        count -= 1

    urllib.urlretrieve("%s"%(img_url),'./tweetimg.jpg')
    return '#XKCD'

def hacker_news():
    BITLY_TOKEN = os.getenv("BITLY_ACCESS_TOKEN")
    global urlfile, urlfile_content
    count = 10
    tweet = ""
    while True and count != 0:
        post_id = json.loads(urllib.urlopen("https://hacker-news.firebaseio.com/v0/newstories.json").read())[random.randint(1,500)]
        post = json.loads(urllib.urlopen("https://hacker-news.firebaseio.com/v0/item/%d.json?print=pretty"%post_id).read())
        post["url"] = urllib.urlopen("https://api-ssl.bitly.com/v3/shorten?access_token=%s&longUrl=%s&format=txt"%(BITLY_TOKEN,post["url"])).read()
        
        if urllib.urlopen(post["url"]).getcode() != 200:
                continue
        if post["url"] not in urlfile_content:
            urlfile.write(post["url"])
            tweet = post["title"] + " "+ post["url"]
            if len(tweet) > 139:
                tweet = post["title"][:139-len(tweet)] + " " + post["url"]
            break

        count -= 1

    return tweet

def chuck_norris_jokes():
    return re.sub("\&quot\;",'"',json.loads(urllib.urlopen("http://api.icndb.com/jokes/random?").read())["value"]["joke"])



CONSUMER_KEY = os.getenv('TWITTER_CONSUMER_KEY')
CONSUMER_SECRET = os.getenv('TWITTER_CONSUMER_SECRET')
ACCESS_TOKEN = os.getenv('TWITTER_ACCESS_TOKEN')
ACCESS_TOKEN_SECRET = os.getenv('TWITTER_ACCESS_TOKEN_SECRET')

auth = tweepy.OAuthHandler(CONSUMER_KEY,CONSUMER_SECRET)

auth.set_access_token(ACCESS_TOKEN,ACCESS_TOKEN_SECRET)

api = tweepy.API(auth)

def check():
    global urlfile, urlfile_content
    
    url_list = urlfile_content.split("\n")

    # excluding last newline
    z = len(url_list) - 2
    if z % 20 == 0:
        return xkcd()
    else:
        return hacker_news()

def main():
    global user_name,bot_name,mflag
    mentions = api.mentions_timeline()
    for post in mentions:
        user_name = post._json["user"]["screen_name"]
        bot_name = post._json["in_reply_to_screen_name"]
        if post.favorited == False and user_name != bot_name:
            mflag = True
            post_id = post.id

            print post_id,user_name,post.text

            if bot_name == user_name:
                continue
            put_post = chuck_norris_jokes()

            reply_post = "@%s %s"%(user_name,put_post)

            api.update_status(reply_post[:280],post_id)

            api.create_favorite(post_id)
    
    #if no mention found in TL, tweet some random stuff
    if not mflag:
        put_post = check()
        print put_post
        if put_post[0] != "#":
            api.update_status(put_post[:280])
        else:
            api.update_with_media('./tweetimg.jpg',put_post[:140])
            os.system('rm ./tweetimg.jpg')

if __name__ == '__main__':
    main()
    urlfile.close()
